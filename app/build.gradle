apply plugin: 'com.android.application'

apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    flavorDimensions "default"
    defaultConfig {
        applicationId 'com.linh.hipster'
        minSdkVersion 23
        targetSdkVersion 27

        multiDexEnabled true

        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner 'com.linh.hipster.MockTestRunner'

    }

    signingConfigs {
        app {
            storeFile file('com.linh.hipster.keystore')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }

    buildTypes {

        applicationVariants.all { variant ->
            if (variant.getBuildType().isMinifyEnabled()) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        into "${rootDir}/proguardTools"
                        rename { String fileName ->
                            "mapping-${variant.name}.txt"
                        }
                    }
                }
            }
        }

        all {
            buildConfigField 'String', 'API_ENDPOINT_LOCAL', "\"http://example.com\""
            buildConfigField 'String', 'API_ENDPOINT_INTERNAL', "\"http://example.com\""
            buildConfigField 'String', 'API_ENDPOINT_STAGING', "\"http://example.com\""
            buildConfigField 'String', 'API_ENDPOINT_PRODUCTION', "\"http://example.com\""
        }
        debug {
          def host = InetAddress.getLocalHost().getCanonicalHostName()
          buildConfigField "String", "LOCAL_IP", '\"' + host + '\"'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            apply plugin: "signing"

            shrinkResources true
            minifyEnabled true

            signingConfig signingConfigs.app

        }
    }

    

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        pickFirst 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        pickFirst 'META-INF/maven/com.google.guava/guava/pom.properties'

        exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
        pickFirst 'META-INF/maven/com.google.dagger/dagger/pom.properties'

        exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
        pickFirst 'META-INF/maven/com.google.dagger/dagger/pom.xml'

        exclude 'META-INF/license'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/services/org.robolectric.internal.ShadowProvider'
        pickFirst 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'assets/oracle_mobile_cloud_internal_config.xml'
        exclude 'META-INF/rxjava.properties'
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "4g"
    }

    productFlavors {
        internal {
            applicationId 'com.linh.hipster.internal'
        }
        production {
            applicationId 'com.linh.hipster'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    

    sourceSets {
        // Functional tests live in src/functionalTests.
        androidTest.java.srcDir 'src/functionalTest/java'
    }

    lintOptions {
        disable "InvalidPackage", 'TypographyFractions', 'TypographyQuotes', 'TrustAllX509TrustManager'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions {
        unitTests.returnDefaultValues = true
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }

    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:multidex:1.0.1"
    implementation "com.android.support:support-annotations:25.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.0.6"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation "com.google.code.gson:gson:2.7"
    implementation "com.squareup.retrofit2:retrofit:2.1.0"
    implementation "com.squareup.okhttp3:okhttp:3.4.1"
    implementation "com.squareup.okhttp3:logging-interceptor:3.4.1"
    implementation "com.squareup.retrofit2:adapter-rxjava:2.1.0"
    implementation "com.squareup.retrofit2:converter-gson:2.1.0"
    compileOnly "javax.annotation:jsr250-api:1.0"
    implementation "com.google.dagger:dagger:2.6"

    implementation "com.android.support:support-v4:27.1.1"
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.android.support:design:27.1.1"
    implementation "com.android.support:recyclerview-v7:27.1.1"

    internalImplementation "com.squareup.leakcanary:leakcanary-android:1.5"
    productionImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.5"

    implementation "com.trello:rxlifecycle:0.6.1"
    implementation "com.trello:rxlifecycle-components:1.0"
    implementation "com.google.dagger:dagger-compiler:2.6"
    implementation "frankiesardo:auto-parcel:1.0.3"
    implementation "com.github.frankiesardo:auto-parcel-processor:0.3.1"

    implementation "info.android15.nucleus:nucleus:4.0.0"
    implementation "info.android15.nucleus:nucleus-support-v4:4.0.0"
    implementation "info.android15.nucleus:nucleus-support-v7:4.0.0"
    implementation "com.jakewharton:butterknife:7.0.1"
    implementation "org.greenrobot:eventbus:3.0.0"
    implementation "uk.co.chrisjenx:calligraphy:2.2.0"
    implementation "com.jakewharton.timber:timber:4.5.1"
    implementation "net.danlew:android.joda:2.9.5.1"
    implementation "org.joda:joda-money:0.12"
    implementation "com.github.johnkil.print:print:1.3.1"
    implementation "com.mixpanel.android:mixpanel-android:4.9.4"
    implementation "com.facebook.stetho:stetho:1.4.2"
    implementation "com.facebook.stetho:stetho-okhttp3:1.4.2"
    // android-hipster-needle-gradle-dependency

}



configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

